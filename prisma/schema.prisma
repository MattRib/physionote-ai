// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Patient {
  id              String           @id @default(cuid())
  name            String
  email           String?          @unique
  phone           String?
  cpf             String?          @unique
  birthDate       DateTime?
  gender          String?
  // Address fields
  street          String?
  number          String?
  complement      String?
  neighborhood    String?
  city            String?
  state           String?
  zipCode         String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  sessions        Session[]
  historySummary  HistorySummary?
}

model Session {
  id            String   @id @default(cuid())
  patientId     String
  date          DateTime @default(now())
  durationMin   Int?
  sessionType   String? // Tipo da sessão (Avaliação inicial, Retorno, etc)
  specialty     String? // Especialidade (Fisioterapia Ortopédica, etc)
  motivation    String? // Motivação/objetivo da consulta
  audioUrl      String?
  audioSize     Int? // tamanho em bytes
  transcription String? // texto completo da transcrição
  status        String   @default("recording") // recording | transcribing | generating | completed | error
  errorMessage  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  patient       Patient  @relation(fields: [patientId], references: [id])
  note          Note?

  @@index([patientId, date])
  @@index([status])
}

model Note {
  id           String    @id @default(cuid())
  sessionId    String    @unique
  contentJson  String // JSON estruturado da nota
  aiGenerated  Boolean   @default(false)
  aiModel      String? // ex: "gpt-4-turbo-preview"
  aiPromptUsed String? // prompt usado (para auditoria)
  reviewedBy   String? // userId que revisou (futuro)
  reviewedAt   DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  session      Session   @relation(fields: [sessionId], references: [id])
}

model HistorySummary {
  id          String   @id @default(cuid())
  patientId   String   @unique
  content     String // Texto do resumo gerado pela IA
  aiModel     String // Modelo usado (ex: "gpt-4o")
  isPinned    Boolean  @default(false) // Se está fixado no histórico
  sessionsIds String // IDs das sessões incluídas (JSON array)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  patient     Patient  @relation(fields: [patientId], references: [id])
}
